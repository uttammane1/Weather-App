{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91888\\\\Desktop\\\\Masai\\\\PROJECTS\\\\Weather-App\\\\src\\\\CityName.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport cityData from './lib/city.json';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationDot } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityName = () => {\n  _s();\n  const [city, setCity] = useState('');\n  const cityNames = cityData.map(city => city.name);\n  const handleClick = e => {\n    e.preventDefault();\n  };\n  const fetchPlaceName = (latitude, longitude) => {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=ef683dcb921bc2b625ee436dac37c640`).then(response => response.json()).then(data => {\n      setCity(data.name);\n    }).catch(error => {\n      console.log(`Error: ${error}`);\n    });\n  };\n  const handleCurrentLocation = e => {\n    e.preventDefault();\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const latitude = Math.round(position.coords.latitude);\n        const longitude = Math.round(position.coords.longitude);\n        fetchPlaceName(latitude, longitude);\n      }, error => {\n        console.error(`Error getting geolocation: ${error.message}`);\n      });\n    } else {\n      console.error('Geolocation is not supported by this browser.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-10 flex items-center flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          placeholder: \"Enter the city name here\",\n          className: \"my-5 text-blue-900 w-[300px] md:w-[400px] outline-none px-4 py-2 rounded-xl bg-slate-200\",\n          onChange: e => {\n            setCity(e.target.value);\n          },\n          list: \"citySuggestions\",\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n          id: \"citySuggestions\",\n          children: cityNames.map((cityName, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cityName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCurrentLocation,\n          className: \"pl-4\",\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faLocationDot,\n            fade: true,\n            style: {\n              color: \"#062256\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      city: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(CityName, \"BbIzi1csgupLqj4A6fqUxOYxArA=\");\n_c = CityName;\nexport default CityName;\nvar _c;\n$RefreshReg$(_c, \"CityName\");","map":{"version":3,"names":["useState","WeatherCard","cityData","FontAwesomeIcon","faLocationDot","jsxDEV","_jsxDEV","CityName","_s","city","setCity","cityNames","map","name","handleClick","e","preventDefault","fetchPlaceName","latitude","longitude","fetch","then","response","json","data","catch","error","console","log","handleCurrentLocation","navigator","geolocation","getCurrentPosition","position","Math","round","coords","message","children","className","type","value","placeholder","onChange","target","list","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","cityName","index","icon","fade","style","color","_c","$RefreshReg$"],"sources":["C:/Users/91888/Desktop/Masai/PROJECTS/Weather-App/src/CityName.js"],"sourcesContent":["import { useState } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport cityData from './lib/city.json'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLocationDot } from '@fortawesome/free-solid-svg-icons';\n\nconst CityName = () => {\n    const [city, setCity] = useState('');\n\n    const cityNames = cityData.map((city) => city.name);\n\n    const handleClick = (e) => {\n        e.preventDefault();\n    }\n\n    const fetchPlaceName = (latitude, longitude) => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=ef683dcb921bc2b625ee436dac37c640`)\n            .then(response => response.json())\n            .then(data => {\n                setCity(data.name);\n            })\n            .catch(error => {\n                console.log(`Error: ${error}`);\n            });\n    };\n\n    const handleCurrentLocation = (e) => {\n        e.preventDefault();\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const latitude = Math.round(position.coords.latitude);\n                    const longitude = Math.round(position.coords.longitude);\n                    fetchPlaceName(latitude, longitude);\n                },\n                (error) => {\n                    console.error(`Error getting geolocation: ${error.message}`);\n                }\n            );\n        } else {\n            console.error('Geolocation is not supported by this browser.');\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"mb-10 flex items-center flex-col\">\n                <form>\n                    <input\n                        type=\"text\"\n                        value={city}\n                        placeholder=\"Enter the city name here\"\n                        className=\"my-5 text-blue-900 w-[300px] md:w-[400px] outline-none px-4 py-2 rounded-xl bg-slate-200\"\n                        onChange={(e) => { setCity(e.target.value) }}\n                        list=\"citySuggestions\"\n                        onClick={handleClick}\n                    />\n                    <datalist id=\"citySuggestions\">\n                        {cityNames.map((cityName, index) => (\n                            <option key={index} value={cityName} />\n                        ))}\n                    </datalist>\n                    <button onClick={handleCurrentLocation} className=\"pl-4\">\n                        <FontAwesomeIcon icon={faLocationDot} fade style={{ color: \"#062256\" }} />\n                    </button>\n                </form>\n            </div>\n            <WeatherCard city={city} />\n        </div>\n    );\n}\n\nexport default CityName;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}